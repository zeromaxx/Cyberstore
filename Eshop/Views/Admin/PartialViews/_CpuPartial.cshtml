@model Eshop.ViewModels.ProductViewModel




<div class="form-group">
    @Html.LabelFor(model => model.Cpu.cores, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Cpu.cores, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Cpu.cores, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Cpu.threads, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Cpu.threads, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Cpu.threads, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Cpu.model, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">

        @Html.EditorFor(model => model.Cpu.model, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Cpu.model, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Cpu.frequency, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Cpu.frequency, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Cpu.frequency, "", new { @class = "text-danger" })
    </div>

</div>
<div class="form-group">
    @Html.LabelFor(model => model.Cpu.chipset, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Cpu.chipset, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Cpu.chipset, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Cpu.socket, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        
            @Html.EditorFor(model => model.Cpu.socket, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cpu.socket, "", new { @class = "text-danger" })
    </div>
</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />

        </div>
    </div>
