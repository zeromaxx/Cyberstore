@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<Eshop.product>
@{
    switch (ViewBag.categoryId)
    {
        case 1:
            ViewBag.Title = "Motherboards";
            break;
        case 2:
            ViewBag.Title = "Cpu";
            break;
        case 3:
            ViewBag.Title = "Gpu";
            break;
        case 4:
            ViewBag.Title = "Psu";
            break;
        case 5:
            ViewBag.Title = "Ram";
            break;
        case 6:
            ViewBag.Title = "Hard Disks";
            break;
        case 8:
            ViewBag.Title = "Monitors";
            break;
        case 9:
            ViewBag.Title = "Boxes";
            break;
        default:
            ViewBag.Title = "All Products";
            break;

    }
}
<div class="wallpaper-container">
    <img src="~/Images/Icons/banner.jpg" alt="wallpaper">
    <div class="wallpaper-heading">
        <!--<h1>Shop</h1>-->
        @{
            switch (ViewBag.categoryId)
            {
                case 1:
                    <h2>Motherboards</h2>
                    break;
                case 2:
                    <h2>CPU</h2>
                    break;
                case 3:
                    <h2>Gpu</h2>
                    break;
                case 4:
                    <h2>Psu</h2>
                    break;
                case 5:
                    <h2>Ram</h2>
                    break;
                case 6:
                    <h2>Hard Disks</h2>
                    break;
                case 8:
                    <h2>Monitors</h2>
                    break;
                case 9:
                    <h2>Boxes</h2>
                    break;
                default:
                    <h2>All products</h2>
                    break;
            }
            switch (ViewBag.sortBy)
            {
                case "newness":
                    <h3>By Newest Product</h3>
                    break;
                case "Price asc":
                    <h3>By Price (Low to High)</h3>
                    break;
                case "Price desc":
                    <h3>By Price (High to Low)</h3>
                    break;
                default:
                    <h3>By Name</h3>
                    break;
            }
            switch (ViewBag.range)
            {
                case "200":
                    <h3>By Price (O - 200 &#x20AC )</h3>
                    break;
                case "400":
                    <h3>By Price (200 - 400 &#x20AC)</h3>
                    break;
                case "600":
                    <h3>By Price (400 - 600 &#x20AC)</h3>
                    break;
                case "800":
                    <h3>By Price (600 - 800 &#x20AC)</h3>
                    break;
                case "top":
                    <h3>By Price (800+ &#x20AC)</h3>
                    break;
                case "all":
                    <h3>All</h3>
                    break;
            }

        }
    </div>
</div>

<div class="products-shop-container">
    <div class="products-shop-categories">
        <div>
            <h4>Electronics</h4>
            <ul>
                <li><a href="@Url.Action("Products", "Home")">All Products</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = 2 })">Cpu</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = 6 })">Hard Disks</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = 1 })">Motherboards</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = 5 })">Ram</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = 3 })">Gpu</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = 4 })">Psu</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = 8 })">Monitors</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = 9 })">Boxes</a></li>
            </ul>
        </div>
        <div>
            <h4>Sort By</h4>
            <ul>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "name" })">Default</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "newness" })">Newness</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "Price asc"})">Price: Low to High</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "Price desc" })">Price: High to Low</a></li>
            </ul>
        </div>

        <div>
            <h4>Price Range</h4>
            <ul>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "newness", range = "all"})">All</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "newness", range = "200"})">0 - 200</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "newness", range = "400"})">200 - 400</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "newness", range = "600"})">400 - 600</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "newness", range = "800"})">600-800</a></li>
                <li><a href="@Url.Action("Products", "Home", new { categoryId = ViewBag.categoryId,sortBy = "newness", range = "top"})">800+</a></li>
            </ul>
        </div>



    </div>
    <div class="products-container">
        @{
            if (!Model.Any())
            {
                <h4>Sorry! There is no item matching your criteria</h4>
            }

        }
        @foreach (var item in Model)
        {
            <div class="product-single">
                <div class="product-single-category">
                    <h6>@item.category.name</h6>
                    <i data-product-id="@item.id" class="fa-regular fa-heart favourite-button @(ViewBag.Favourites.Contains(item.id) ? "blue-heart" : "grey-heart")"></i>

                </div>
                <div class="hot-releases-img-container">
                    <a href="@Url.Content("ProductDetails/" + item.id)">
                        <img class="@(item.stock == 0 ? "low-opacity" : "product-container-img")" src="@Url.Content("~/Images/" + item.image1)" alt="">

                        @if (item.stock == 0)
                        {
                            <span class="out-of-stock">Out Of Stock</span>
                        }
                    </a>
                </div>
                <div class="product-single-info">
                    <i class="fas fa-star"></i>
                    <i class="fas fa-star"></i>
                    <i class="fas fa-star"></i>
                    <i class="fas fa-star"></i>
                    <i class="fas fa-star"></i>
                    <a href="@Url.Content("ProductDetails/" + item.id)">
                        <h5>@Html.DisplayFor(modelItem => item.Name)</h5>
                    </a>
                    @if (item.stock == 0)
                    {

                    }
                    else
                    {
                        <h6>Quantity: @item.stock</h6>
                    }

                    <div>
                        <h3>&#x20AC @Html.DisplayFor(modelItem => item.price)</h3>
                        @if (!ViewBag.addedCartProducts.Contains(item.id))
                        {
                            if (item.stock == 0)
                            {

                                <?xml version="1.0" ?>
                                <svg width="24px" height="24px" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path fill="#ff4b4b" d="M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM64 256c0-41.4 13.3-79.68 35.68-111.1l267.4 267.4C335.7 434.7 297.4 448 256 448C150.1 448 64 361.9 64 256zM412.3 367.1L144.9 99.68C176.3 77.3 214.6 64 256 64c105.9 0 192 86.13 192 192C448 297.4 434.7 335.7 412.3 367.1z" /></svg>
                            }
                            else
                            {
                                <div data-cart-id="@item.id" class="cart-div add-to-cart-btn">
                                    <span class="unlogged-user">Login To Continue</span>
                                    <input id="userId" type="hidden" value="@TempData["userId"]" />
                                    <svg data-cart-id="@item.id" class="arrow-svg" baseProfile="tiny" height="24px" version="1.2" viewBox="0 0 24 24"
                                         width="24px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg"
                                         xmlns:xlink="http://www.w3.org/1999/xlink">
                                    <g id="Layer_1">
                                    <path data-cart-id="@item.id" d="M16.707,13.293c-0.391-0.391-1.023-0.391-1.414,0L13,15.586V8c0-0.552-0.447-1-1-1s-1,0.448-1,1v7.586l-2.293-2.293   c-0.391-0.391-1.023-0.391-1.414,0s-0.391,1.023,0,1.414L12,19.414l4.707-4.707C17.098,14.316,17.098,13.684,16.707,13.293z" />
                                </g>
                            </svg>
                                    <svg data-cart-id="@item.id" class="cart-svg" id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 256 256">
                                        <defs>
                                        </defs>
                                        <rect class="cls-1" width="256" height="256" />
                                        <circle data-cart-id="@item.id" class="cls-2" cx="80" cy="216" r="18" />
                                        <circle data-cart-id="@item.id" class="cls-4" cx="184" cy="216" r="18" />
                                        <path data-cart-id="@item.id" class="cls-3"
                                              d="M42.3,72H221.7l-26.4,92.4A15.91,15.91,0,0,1,179.9,176H84.1a15.91,15.91,0,0,1-15.4-11.6L32.5,37.8A8,8,0,0,0,24.8,32H8" />
                                    </svg>
                                </div>
                            }

                        }
                        else
                        {
                            <div>

                                <svg width="50" height="50" id="Layer_1" style="enable-background:new 0 0 30 30;"
                                     version="1.1" viewBox="0 0 30 30" xml:space="preserve" xmlns="http://www.w3.org/2000/svg"
                                     xmlns:xlink="http://www.w3.org/1999/xlink">
                                <path fill="#3e71fa"
                                      d="M15,3C8.373,3,3,8.373,3,15c0,6.627,5.373,12,12,12s12-5.373,12-12C27,8.373,21.627,3,15,3z M21.707,12.707l-7.56,7.56  c-0.188,0.188-0.442,0.293-0.707,0.293s-0.52-0.105-0.707-0.293l-3.453-3.453c-0.391-0.391-0.391-1.023,0-1.414s1.023-0.391,1.414,0  l2.746,2.746l6.853-6.853c0.391-0.391,1.023-0.391,1.414,0S22.098,12.316,21.707,12.707z" />
    </svg>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
        <div class="pagination">
            @Html.PagedListPager(Model, page => Url.Action("Products", new { page = page, sortBy = Request["sortBy"], range = Request["range"], categoryId =Request["categoryId"] }))
        </div>
    </div>
</div>


@section scripts{
    <script src="~/Scripts/cart_animation.js"></script>
    <script src="~/Scripts/Navbar Toggle.js"></script>
    <script src="~/Scripts/LiveSearch.js"></script>
    <script src="~/Scripts/WishList.js"></script>
    <script src="~/Scripts/AddToCart.js"></script>

}


